{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Easily integrate your Godot game with Game Jolt's Game API! Why? Even though there are other more developed plugin for integrating with the Game API, most of them rely on signals, callbacks and such. They require you to connect to a signal and provides no way to wait for API calls to finish. This prevents you from doing sophisticated things such as authenticating using only one line of code and waiting for it to be done. While this plugin also use signals internally in confunction with yield () , you do not need to connect to signals to do things. Instead, you use yield ( GameJolt . function_here (), \"completed\" ) to wait for functions to finish without blocking your game's main loop. Useful links for contributors Game API Docs","title":"Home"},{"location":"#home","text":"Easily integrate your Godot game with Game Jolt's Game API!","title":"Home"},{"location":"#why","text":"Even though there are other more developed plugin for integrating with the Game API, most of them rely on signals, callbacks and such. They require you to connect to a signal and provides no way to wait for API calls to finish. This prevents you from doing sophisticated things such as authenticating using only one line of code and waiting for it to be done. While this plugin also use signals internally in confunction with yield () , you do not need to connect to signals to do things. Instead, you use yield ( GameJolt . function_here (), \"completed\" ) to wait for functions to finish without blocking your game's main loop.","title":"Why?"},{"location":"#useful-links-for-contributors","text":"Game API Docs","title":"Useful links for contributors"},{"location":"setting-up/","text":"Setting up Since this API is created as a Godot plugin, the only thing you have to do to get it working is enabling it in your project settings and setting up your game credentials. Getting your game's ID and key Go to your game's dashboard on GameJolt. There are generally two ways to do this: From the home page, click on your game's name under the \"Manage Games\" list. From your game's page, click on the gear icon. Go to the API Settings page under the Game API tab. Configure the API Now that you have your game's ID and key, you can set up the game credentials from a script. It is recommended that you do this from a Game Manager 1 script for convenience. Example: GameJolt . game_id = \"id here\" GameJolt . game_key = \"key here\" Info Most of the functionalities of the Game API requires the game ID. The plugin will stop you from using them unless you have the game ID set. A Game Manager is usually a singleton that manage things in a game such as score, game states, etc. \u21a9","title":"Setting up"},{"location":"setting-up/#setting-up","text":"Since this API is created as a Godot plugin, the only thing you have to do to get it working is enabling it in your project settings and setting up your game credentials.","title":"Setting up"},{"location":"setting-up/#getting-your-games-id-and-key","text":"Go to your game's dashboard on GameJolt. There are generally two ways to do this: From the home page, click on your game's name under the \"Manage Games\" list. From your game's page, click on the gear icon. Go to the API Settings page under the Game API tab.","title":"Getting your game's ID and key"},{"location":"setting-up/#configure-the-api","text":"Now that you have your game's ID and key, you can set up the game credentials from a script. It is recommended that you do this from a Game Manager 1 script for convenience. Example: GameJolt . game_id = \"id here\" GameJolt . game_key = \"key here\" Info Most of the functionalities of the Game API requires the game ID. The plugin will stop you from using them unless you have the game ID set. A Game Manager is usually a singleton that manage things in a game such as score, game states, etc. \u21a9","title":"Configure the API"},{"location":"trophy-management/","text":"Trophy management This page list the functions that are part of the /trophies/ endpoint of the Game API. Granting and revoking trophies Info To get the ID of a trophy, head to the Trophies page under the Game API tab of your game's dashboard Granting a trophy func grant_trophy ( id : int ) -> bool Revoking a trophy func revoke_trophy ( id : int ) -> bool","title":"Trophy management"},{"location":"trophy-management/#trophy-management","text":"This page list the functions that are part of the /trophies/ endpoint of the Game API.","title":"Trophy management"},{"location":"trophy-management/#granting-and-revoking-trophies","text":"Info To get the ID of a trophy, head to the Trophies page under the Game API tab of your game's dashboard","title":"Granting and revoking trophies"},{"location":"trophy-management/#granting-a-trophy","text":"func grant_trophy ( id : int ) -> bool","title":"Granting a trophy"},{"location":"trophy-management/#revoking-a-trophy","text":"func revoke_trophy ( id : int ) -> bool","title":"Revoking a trophy"},{"location":"user-management/","text":"User management Authenticating a user While the Game API itself does not have an authentication system, it provides a way to validate if a set of username and token are valid. This API requires that you use the authenticate () function to validate the credentials to use API calls that requires username and token. It is possible to bypass this functionality by setting is_authenticated to true, but doing so is not recommended. To authenticate, use the authenticate () function like this: var success = yield ( GameJolt . authenticate ( \"username\" , \"token\" ), \"completed\" )","title":"User management"},{"location":"user-management/#user-management","text":"","title":"User management"},{"location":"user-management/#authenticating-a-user","text":"While the Game API itself does not have an authentication system, it provides a way to validate if a set of username and token are valid. This API requires that you use the authenticate () function to validate the credentials to use API calls that requires username and token. It is possible to bypass this functionality by setting is_authenticated to true, but doing so is not recommended. To authenticate, use the authenticate () function like this: var success = yield ( GameJolt . authenticate ( \"username\" , \"token\" ), \"completed\" )","title":"Authenticating a user"}]}